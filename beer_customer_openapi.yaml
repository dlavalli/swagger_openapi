openapi: 3.0.2
info:
  title: OpenAPI Course
  description: Specification for OpenAPI Course
  termsOfService: http://example.com/terms/
  contact:
    name: John Thompson
    url: https://springframework.guru
    email: john@springframework.guru
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
servers:
- url: https://dev.example.com
  description: Development Server
- url: https://qa.example.com
  description: QA Server
- url: https://prod.example.com
  description: Production Server
paths:
  /v1/customers:
    get:
      responses:
        200:
          description: List of Customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerList"
                        
                    
  /v1/beers:
    get:
      responses:
        200:
          description: List of Beers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BeerList"
        404:
          description: No Beers Found
          
components:
  schemas:
    Address:
      type: object
      properties:
        line1:
          type: string
          example: 123 Main St
        city:
          type: string
          example: St Pete
        stateCode:
          type: string
          description: 2 letter state code
          minLength: 2
          maxLength: 2
          # enum : [ AL, AX, AZ, AR, CA ]
          enum:
            - AL
            - AX
            - AZ
            - AR
            - CA
        zipCode:
          type: string
          example: 33701
    Customer:
      type: object
      description: Customer Object
      properties:
        id:
          type: string
          format: uuid
        firstName: 
          type: string
          minLength: 2
          maxLength: 100
          example: John
        lastName:
          type: string
          minLength: 2
          maxLength: 100
          example: Thompson
        address:
          $ref: "#/components/schemas/Address"
    CustomerList:
      type: array
      maxItems: 100
      minItems: 1
      items:
        $ref: "#/components/schemas/Customer"
    Brewery:
      type: object
      properties:
        name: 
          type: string
        location:
          type: string
    Beer:
      type: object
      description: Beer Object
      properties:
        beerName:
          type: string
        style:
          type: string
          enum:
            - ALE
            - PALE_ALE
            - IPA
            - WHEAT
            - LAGER
        upc:
          type: string
        price:
          type: number
          format: float
          example: 7.55
        quantity:
          type: integer
          format: int32
        brewery:
          $ref: "#/components/schemas/Brewery"
    BeerList:
      type: array
      items:
        $ref: "#/components/schemas/Beer"